
# Print system information.
if [ -f /usr/bin/fastfetch ]; then
	fastfetch
fi

# Oh My Zsh.
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"
ZSH_CUSTOM=$HOME/.dotfiles/src/oh-my-zsh-custom
plugins=(git)
source $ZSH/oh-my-zsh.sh

# Homebrew.
export PATH="${HOMEBREW_PREFIX}/opt/openssl/bin:$PATH"
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/sbin:$PATH"

# Pyenv.
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# fzf (command-line fuzzy finder).
source <(fzf --zsh)

# Custom scripts.
export PATH="$HOME/.dotfiles/bin:$PATH"

# Default editor.
export EDITOR=nvim
export VISUAL=nvim
alias vim="nvim"

# Change directory aliases.
alias cd..="cd .."
alias ..="cd .."

# Extracts any archive(s) (if unp isn't installed).
extract() {
	for archive in "$@"; do
		if [ -f "$archive" ]; then
			case $archive in
			*.tar.bz2) tar xvjf $archive ;;
			*.tar.gz) tar xvzf $archive ;;
			*.bz2) bunzip2 $archive ;;
			*.rar) rar x $archive ;;
			*.gz) gunzip $archive ;;
			*.tar) tar xvf $archive ;;
			*.tbz2) tar xvjf $archive ;;
			*.tgz) tar xvzf $archive ;;
			*.zip) unzip $archive ;;
			*.Z) uncompress $archive ;;
			*.7z) 7z x $archive ;;
			*) echo "Unknown '$archive'..." ;;
			esac
		else
			echo "'$archive' is not a valid file!"
		fi
	done
}

# Automatically do an ls after each cd, z, or zoxide.
cd ()
{
	if [ -n "$1" ]; then
		builtin cd "$@" && ls
	else
		builtin cd ~ && ls
	fi
}

# Trim leading and trailing spaces (for scripts).
trim() {
	local var=$*
	var="${var#"${var%%[![:space:]]*}"}" # remove leading whitespace characters
	var="${var%"${var##*[![:space:]]}"}" # remove trailing whitespace characters
	echo -n "$var"
}

# Per-machine configuration.
if [ -f ~/.zshrc_local ]; then
    source ~/.zshrc_local
fi
